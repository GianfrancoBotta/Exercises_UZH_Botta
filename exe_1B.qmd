---
title: "Exercise 1B UZH"
author: "Gianfranco Botta"
format: html
editor: visual
---

### Download libraries

First, import libraries.

```{r}
library(ggplot2)
```

### Create the data

Set a seed to enable reproducibility of results. After that, generate 100 random values using rlnorm function and find the real mean and standard deviation of the sampled data.

```{r}
set.seed(123)
mu = 5
sigma = 0.5

data = rlnorm(100, mu, sigma)

mean = mean(data)
sd = sd(data)
```

### Histogram in linear scale

Bringing our data in a dataframe format because ggplot needs this type of variable, then create a histogram of the sampled data on a linear scale.

```{r}
df = data.frame(data)

ggplot(df, aes(x = data)) +
  geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
  labs(x = "Data", y = "Frequency") +
  theme_bw() +
  theme(
    panel.border = element_blank(),
    axis.line = element_line(color = "black", linewidth = 0.5, lineend = "square")
  ) +
  ggtitle("Histogram in Linear Scale")
```

### Histogram in log scale

Represent the data even in a log scale.

```{r}
ggplot(df, aes(x = data)) +
  geom_histogram(binwidth = 0.02, fill = "red", color = "black", alpha = 0.7) +
  scale_x_log10() +
  theme_bw() +
  theme(
    panel.border = element_blank(),
    axis.line = element_line(color = "black", linewidth = 0.5, lineend = "square")
  ) +
    labs(x = "Log(Data)", y = "Frequency") +
  ggtitle("Histogram in Log Scale")
```

### Violin plot

Finally, create a violin plot of the data.

```{r}
ggplot(df, aes(x = "Data", y = data)) +
  geom_violin(fill = "lightgreen", color = "black") +
  geom_boxplot(width = .1, fill = "darkgreen", outlier.colour = NA) +
  stat_summary(fun = median, geom = "point", fill = "white", shape = 25, size = 3) +
  labs(x = NULL, y = "Data") +
  theme_bw() +
  theme(
    panel.border = element_blank(),
    axis.line = element_line(color = "black", linewidth = 0.5, lineend = "square")
  ) +
  ggtitle("Violin Plot of Log-Normal Data")
```

### Print mean value and standard deviation of our random sample

```{r}
cat("mean value = ", mean,"\nstandard deviation = ", sd, "\n")
```
